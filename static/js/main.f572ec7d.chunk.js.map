{"version":3,"sources":["common/constants.ts","components/Footer/index.tsx","common/context.ts","components/CityBlockPlaceholder/index.tsx","common/data/stations.ts","hooks/useWindowDimensions.ts","hooks/useIsTablet.ts","components/CityBlock/index.tsx","common/weather.ts","components/CityBlockCurrent/index.tsx","services/weather/index.ts","containers/CityBlockCurrent/index.tsx","hooks/useArrayReducer.ts","components/CityBlockChart/index.tsx","components/TimeSeriesChart/index.tsx","containers/CityBlockTimeSeries/index.tsx","containers/CityBlockChart/index.tsx","containers/CityBlock/index.tsx","containers/CityBlockIterator.tsx","containers/ModalsProvider.tsx","hooks/useStations.ts","containers/StationsProvider.tsx","containers/ContextProviders.tsx","components/CityAdd/index.tsx","components/BaseModal/index.tsx","components/CityConfigModal/index.tsx","components/CityOrder/index.tsx","containers/CityConfigModal/index.tsx","containers/Modals.tsx","components/Nav/index.tsx","containers/Nav/index.tsx","App.tsx","serviceWorker.ts","common/fontawesome.ts","index.tsx"],"names":["SCREEN_BREAKPOINTS","LOCAL_STORAGE_KEYS","URL","Footer","props","className","href","target","rel","src","frameBorder","scrolling","width","height","title","ModalsContext","React","createContext","modals","cities","toggle","k","StationsContext","stations","onAdd","onRemove","onMoveUp","onMoveDown","CityBlockPlaceholder","description","icon","expand","inline","onToggle","onClick","STATIONS","id","city","name","getWindowDimensions","window","innerWidth","innerHeight","useIsTablet","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","tablet","WEATHER_UNIT_KEYS","BodyTabs","currentComponent","chartComponent","activeTab","setActiveTab","label","map","tab","key","aria-hidden","CityBlock","station","isOpen","onToggleOpen","dropdownComponent","isTablet","WEATHER_STAT_KEYS","WEATHER_UNITS","degF","link","undefined","abbrev","degC","Pa","m","inch","percent","WEATHER_STAT_SPEC","temperature","unit","isDefault","color","dewpoint","windDirection","degree_angle","windSpeed","km_h_1","windGust","barometricPressure","seaLevelPressure","visibility","maxTemperatureLast24Hours","minTemperatureLast24Hours","precipitationLastHour","precipitationLast3Hours","precipitationLast6Hours","relativeHumidity","windChill","heatIndex","CityBlockCurrentStat","spec","stat","units","CityBlockCurrentTitle","STATUS_TITLES","QueryStatus","Error","message","background","foreground","canRefetch","Loading","Success","DataPlaceholder","status","onRefetch","useMemo","DataRows","data","properties","value","CityBlockCurrent","BASE_URL","HEADERS","Headers","append","REQUEST_INIT","method","headers","_callWeatherStation","url","a","fetch","res","ok","json","r","detail","weatherLatest","_","stationId","weatherHistorical","limit","features","length","ARRAY_REDUCER_ACTIONS","idx","out","useQuery","cacheTime","staleTime","statusTitle","useWeatherLatest","updatedAt","refetch","console","log","Date","handleRefetch","SeriesSelection","specs","active","onSelect","aria-label","onChange","e","find","HeaderButton","isActive","disabled","InfoButton","FullScreenButton","Header","selectComponent","infoButton","fullScreenButton","CityBlockChart","activeSeries","showInfo","showFullScreen","onInfo","onFullScreen","onSeriesSelect","children","TimeSeriesChart","series","chartType","options","chart","type","stacked","zoom","enabled","autoScaleYaxis","toolbar","show","autoSelected","tools","zoomin","zoomout","reset","events","colors","dataLabels","yaxis","labels","formatter","val","toFixed","style","text","axisBorder","xaxis","datetimeFormatter","year","month","day","hour","tooltip","shared","x","format","y","generateTimeSeriesOptions","optionsLine","brush","selection","min","max","slice","tickAmount","generateBrushSeriesOptions","measureRef","entry","Math","generateChartDims","contentRect","ref","BRUSH_CHART_HEIGHT","CityBlockTimeSeries","datesInv","feat","timestamp","valueOf","extractDatesFromData","i","reverse","filter","el","extractSeriesFromData","setShowInfo","isFullScreen","setIsFullScreen","setActiveSeries","useWeatherHistorical","v","setIsOpen","s","CityBlockIterator","useContext","ModalsProvider","setModals","context","Provider","addAtIndex","element","arr","removeAtIndex","reducer","state","action","ADD","index","to","REMOVE","from","MOVE","fromIdx","toIdx","KEY","useStations","initialState","useReducer","dispatch","onMove","useArrayReducer","JSON","parse","localStorage","getItem","stringify","setItem","StationsProvider","queryCache","QueryCache","ContextProvider","CityAddRow","CityAdd","BaseModal","closeButton","CityConfigModal","leftChild","rightChild","CityOrderRow","isLast","CityOrder","unusedStations","every","s_","Modals","Nav","onToggleCities","onToggleActive","role","aria-expanded","data-target","setIsActive","App","Boolean","location","hostname","match","library","add","faCloud","faCity","faChevronDown","faChevronUp","faChartLine","faTemperatureHigh","faMountain","faCompass","faWind","faWeightHanging","faEye","faTemperatureLow","faCloudRain","faGrinBeamSweat","faIcicles","faFire","faEnvelope","faTwitter","faFacebook","faLinkedin","faPlus","faTrash","faEdit","faSearchLocation","faExpand","faInfoCircle","faHourglassHalf","faExclamationCircle","faDatabase","dom","watch","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.f572ec7d.chunk.js","sourcesContent":["export const APP_NAME = \"Weather demo\";\nexport const CONTACT_EMAIL = \"wm.wooley@gmail.com\";\nexport const URL = \"https://github.com/michaelwooley/frontend-demo-react\";\n\nexport enum SCREEN_BREAKPOINTS {\n  \"mobile\" = 768, // up to 768px\n  \"tablet\" = 769, //from 769px\n  \"desktop\" = 1024, // from 1024px\n  \"widescreen\" = 1216, //from 1216px\n  \"fullhd\" = 1408,\n}\n\nexport enum LOCAL_STORAGE_KEYS {\n  STATIONS = \"bhw-react-stations\",\n}\n","import { APP_NAME, URL } from \"common/constants\";\nimport React from \"react\";\nimport \"./index.scss\";\n\nexport interface FooterProps {}\n\n/**\n * Primary UI component for user interaction\n */\nexport const Footer: React.FC<FooterProps> = ({ ...props }) => {\n  return (\n    <>\n      <div className=\"spacer\" />\n      <footer className=\"footer\" {...props}>\n        <div className=\"columns\">\n          <div className=\"column is-3\">\n            <h6 className=\"is-size-5\">\n              <strong>{APP_NAME}</strong> by{\" \"}\n              <a\n                href=\"mailto:wm.wooley@gmail.com\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Michael Wooley\n              </a>\n              .\n            </h6>\n            <ul className=\"is-size-7\">\n              <li>\n                <a\n                  href=\"https://github.com/michaelwooley/frontend-demo-react\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Source code\n                </a>{\" \"}\n                licensed{\" \"}\n                <a\n                  href=\"https://opensource.org/licenses/mit-license.php\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  MIT\n                </a>\n                .\n              </li>\n            </ul>\n          </div>\n          <div className=\"column is-3\">\n            <h6 className=\"is-size-5\">\n              <strong>Contribute</strong> on GitHub\n            </h6>\n            <iframe\n              src=\"https://ghbtns.com/github-btn.html?user=michaelwooley&repo=frontend-demo-react&type=star&count=false&size=large\"\n              frameBorder=\"0\"\n              scrolling=\"0\"\n              width=\"170\"\n              height=\"30\"\n              title=\"GitHub Star\"\n            />\n            <br />\n            <iframe\n              src=\"https://ghbtns.com/github-btn.html?user=michaelwooley&type=follow&count=true&size=large\"\n              frameBorder=\"0\"\n              scrolling=\"0\"\n              width=\"230\"\n              height=\"30\"\n              title=\"GitHub Follow\"\n            />\n          </div>\n          <div className=\"column is-3\">\n            <h6 className=\"is-size-5\">\n              <strong>Credits</strong>\n            </h6>\n            <ul className=\"is-size-7\">\n              <li>\n                Weather data drawn from{\" \"}\n                <a\n                  href=\"https://www.weather.gov/documentation/services-web-api#/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  National Weather Service (weather.gov)\n                </a>\n              </li>\n              <li>\n                Built with{\" \"}\n                <a href=\"reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  react.js\n                </a>\n              </li>\n              <li>\n                UI by{\" \"}\n                <a\n                  href=\"https://bulma.io\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  bulma\n                </a>\n              </li>\n              <li>\n                Icons by{\" \"}\n                <a\n                  href=\"https://fontawesome.com\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Font Awesome\n                </a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"column\" />\n          <div className=\"column is-narrow\">\n            <h6 className=\"is-size-5\">\n              <strong>Share</strong>\n            </h6>\n            <ul className=\"is-size-7\">\n              <li>\n                <a\n                  href={`https://twitter.com/home?status=${URL} A free weather app, written in svelte!`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <span className=\"icon\">\n                    {\" \"}\n                    <i className=\"fab fa-twitter\" />{\" \"}\n                  </span>\n                  <span>Twitter</span>\n                </a>\n              </li>\n              <li>\n                <a\n                  href={`https://www.linkedin.com/shareArticle?mini=true&url=${URL}&title=${APP_NAME}&summary=A free weather app, written in svelte!&source=`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <span className=\"icon\">\n                    {\" \"}\n                    <i className=\"fab fa-linkedin\" />{\" \"}\n                  </span>\n                  <span>LinkedIn</span>\n                </a>\n              </li>\n              <li>\n                <a\n                  href={`https://www.facebook.com/sharer/sharer.php?u=${URL}`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <span className=\"icon\">\n                    {\" \"}\n                    <i className=\"fab fa-facebook\" />{\" \"}\n                  </span>\n                  <span>Facebook</span>\n                </a>\n              </li>\n              <li>\n                <a\n                  href={`mailto:info@example.com?body=${URL}`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <span className=\"icon\">\n                    {\" \"}\n                    <i className=\"fas fa-envelope\" />{\" \"}\n                  </span>\n                  <span>Email</span>\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </footer>\n    </>\n  );\n};\n","import React from \"react\";\nimport { IStationName } from \"common/data\";\n\nexport type IModalNames = { cities: boolean };\n\nexport type IModalsContext = {\n  modals: IModalNames;\n  toggle: (k: keyof IModalNames) => void;\n};\n\nexport const ModalsContext = React.createContext<IModalsContext>({\n  modals: {\n    cities: false,\n  },\n  toggle: (k: keyof IModalNames) => null,\n});\n\n/**\n * Specifies the set of stations that are currently selected by the user.\n */\nexport const StationsContext = React.createContext<{\n  stations: IStationName[];\n  onAdd: (s: IStationName) => void;\n  onRemove: (idx: number) => void;\n  onMoveUp: (idx: number) => void;\n  onMoveDown: (idx: number) => void;\n}>({\n  stations: [],\n  onAdd: () => null,\n  onRemove: () => null,\n  onMoveUp: () => null,\n  onMoveDown: () => null,\n});\n","import React from \"react\";\nimport \"./index.scss\";\n\nexport interface CityBlockPlaceholderProps {\n  /**\n   * title\n   */\n  title: string;\n\n  /**\n   * Help text below the title\n   */\n  description: string;\n\n  /**\n   * className of icon to be used\n   */\n  icon: string;\n\n  /**\n   * If true, will expand box to be 80vh\n   */\n  expand?: boolean;\n\n  /**\n   * If true, places the icon next to title. If false, places on top line.\n   */\n  inline?: boolean;\n\n  /**\n   * Open the station config modal\n   */\n  onToggle?: () => void;\n}\n\n/**\n * Placeholder \"button\" for editing cities.\n */\nexport const CityBlockPlaceholder: React.FC<CityBlockPlaceholderProps> = ({\n  title,\n  description,\n  icon,\n  expand = false,\n  inline = true,\n  onToggle,\n  ...props\n}) => {\n  return (\n    <div\n      className={`city-block-placeholder box mb-4 mt-4 ${\n        expand ? \"expanded\" : \"\"\n      }`}\n      {...props}\n      onClick={onToggle}\n      title={\n        onToggle &&\n        \"Click here or the on the button in the top-right to edit your cities.\"\n      }\n    >\n      <div className=\"content has-text-centered\">\n        {!inline && (\n          <>\n            <h2 className=\"title is-2\">\n              <span className=\"icon is-large\">\n                <i className={icon}></i>\n              </span>\n            </h2>\n            <br></br>\n          </>\n        )}\n        <h2 className=\"title is-4\">\n          {inline && (\n            <span className=\"icon pr-2\">\n              <i className={icon}></i>\n            </span>\n          )}\n          <span>{title}</span>\n        </h2>\n        <p>{description}</p>\n      </div>\n    </div>\n  );\n};\n","export type IStationName = {\n  id: string;\n  city: string;\n  name: string;\n};\n\nexport const STATIONS: IStationName[] = [\n  {\n    id: \"KLUK\",\n    city: \"Cincinnati, OH\",\n    name: \"Cincinnati Municipal Airport Lunken Field\",\n  },\n  {\n    id: \"KIND\",\n    name: \"Indianapolis International Airport\",\n    city: \"Indianapolis, IN\",\n  },\n  {\n    id: \"KSDF\",\n    name: \"Louisville, Standiford Field\",\n    city: \"Louisville, KY\",\n  },\n  {\n    id: \"KLEX\",\n    name: \"Lexington Blue Grass Airport\",\n    city: \"Lexington, KY\",\n  },\n];\n","import { useEffect, useState } from \"react\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import { SCREEN_BREAKPOINTS } from \"common\";\nimport { useWindowDimensions } from \"./useWindowDimensions\";\n\nexport function useIsTablet() {\n  const { width } = useWindowDimensions();\n\n  return width >= SCREEN_BREAKPOINTS.tablet;\n}\n","import React, { useState } from \"react\";\nimport { IStationName } from \"common/data/stations\";\nimport \"./index.scss\";\nimport { useIsTablet } from \"hooks/useIsTablet\";\n\nconst BodyTabs: React.FC<{\n  currentComponent: React.ReactNode;\n  chartComponent: React.ReactNode;\n}> = ({ currentComponent, chartComponent }) => {\n  type tabIds = \"current\" | \"chart\";\n  const [activeTab, setActiveTab] = useState<tabIds>(\"current\");\n\n  const tabs: { id: tabIds; icon: string; label: string }[] = [\n    { id: \"current\", icon: \"fas fa-temperature\", label: \"Current\" },\n    { id: \"chart\", icon: \"fas fa-chart-line\", label: \"Charts\" },\n  ];\n\n  return (\n    <>\n      <div className=\"tabs as-button is-centered is-small\">\n        <ul>\n          {tabs.map((tab) => (\n            <li\n              key={tab.id}\n              className={activeTab === tab.id ? \"is-active\" : \"\"}\n            >\n              <button\n                className=\"button is-small\"\n                onClick={() => setActiveTab(tab.id)}\n              >\n                <span className=\"icon is-small\">\n                  <i className={tab.icon} aria-hidden=\"true\"></i>\n                </span>\n                <span>{tab.label}</span>\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div>\n        {activeTab === \"current\" && currentComponent}\n        {activeTab === \"chart\" && chartComponent}\n      </div>\n    </>\n  );\n};\n\nexport interface CityBlockProps {\n  /**\n   * Station data\n   */\n  station: IStationName;\n\n  /**\n   * If true, the full panel is displayed\n   */\n  isOpen: boolean;\n\n  /**\n   * Called to toggle panel open or close.\n   */\n  onToggleOpen: (station: IStationName) => void;\n\n  currentComponent: React.ReactNode;\n  chartComponent: React.ReactNode;\n\n  /**\n   * Displays dropdown menu on right of top bar.\n   */\n  dropdownComponent?: React.ReactNode;\n}\n\n/**\n * Primary UI component for user interaction\n */\nexport const CityBlock: React.FC<CityBlockProps> = ({\n  station,\n  isOpen = false,\n  onToggleOpen,\n  currentComponent,\n  chartComponent,\n  dropdownComponent,\n  ...props\n}) => {\n  const isTablet = useIsTablet();\n\n  return (\n    <div className=\"city-block mb-2 pb-2\" id={station.id} {...props}>\n      <nav className=\"level mb-1\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <button\n              className=\"button is-medium is-white\"\n              onClick={() => onToggleOpen(station)}\n            >\n              {/* TODO Figure out responsive icons */}\n              {isOpen ? (\n                <span className=\"icon\">\n                  <i className=\"fas fa-chevron-up\"></i>\n                </span>\n              ) : (\n                <span className=\"icon\">\n                  <i className=\"fas fa-chevron-down\"></i>\n                </span>\n              )}\n\n              <span className=\"has-text-weight-semibold\">{station.city}</span>\n            </button>\n          </div>\n        </div>\n\n        <div className=\"level-right\">\n          {/* TODO Add current temperature + status */}\n          {dropdownComponent && (\n            <div className=\"level-item\">{dropdownComponent}</div>\n          )}\n        </div>\n      </nav>\n      {isOpen &&\n        (isTablet ? (\n          <div className=\"columns\">\n            <div className=\"column is-narrow\">{currentComponent}</div>\n            <div className=\"column\">{chartComponent}</div>\n          </div>\n        ) : (\n          <BodyTabs\n            currentComponent={currentComponent}\n            chartComponent={chartComponent}\n          ></BodyTabs>\n        ))}\n    </div>\n  );\n};\n","export type IWeatherUnit = { link?: string; name: string; abbrev: string };\n\nexport enum WEATHER_UNIT_KEYS {\n  degF = \"degF\",\n  degC = \"degC\",\n  degree_angle = \"degree_(angle)\",\n  km_h_1 = \"km_h-1\",\n  Pa = \"Pa\",\n  m = \"m\",\n  inch = \"inch\",\n  percent = \"percent\",\n}\n\nexport const WEATHER_UNITS: { [k in WEATHER_UNIT_KEYS]: IWeatherUnit } = {\n  degF: {\n    link: undefined,\n    name: \"Degrees Fahrenheit\",\n    abbrev: \"˚ F\",\n  },\n  degC: {\n    link: \"http://codes.wmo.int/common/unit/degC\",\n    name: \"Degrees Celsius\",\n    abbrev: \"˚ C\",\n  },\n  \"degree_(angle)\": {\n    link: \"http://codes.wmo.int/common/unit/degree_(angle)\",\n    name: \"Degrees (angle)\",\n    abbrev: \"˚\",\n  },\n  \"km_h-1\": {\n    link: \"http://codes.wmo.int/common/unit/km_h-1\",\n    name: \"Kilometers per hour\",\n    abbrev: \"kph\",\n  },\n  Pa: {\n    link: \"http://codes.wmo.int/common/unit/Pa\",\n    name: \"Pascals\",\n    abbrev: \"Pa\",\n  },\n  m: {\n    link: \"http://codes.wmo.int/common/unit/m\",\n    name: \"Meters\",\n    abbrev: \"m\",\n  },\n  inch: {\n    link: undefined,\n    name: \"Inches\",\n    abbrev: \"in.\",\n  },\n  percent: {\n    link: \"http://codes.wmo.int/common/unit/percent\",\n    name: \"Percent\",\n    abbrev: \"%\",\n  },\n};\n\nexport enum WEATHER_STAT_KEYS {\n  temperature = \"temperature\",\n  dewpoint = \"dewpoint\",\n  windDirection = \"windDirection\",\n  windSpeed = \"windSpeed\",\n  windGust = \"windGust\",\n  barometricPressure = \"barometricPressure\",\n  seaLevelPressure = \"seaLevelPressure\",\n  visibility = \"visibility\",\n  maxTemperatureLast24Hours = \"maxTemperatureLast24Hours\",\n  minTemperatureLast24Hours = \"minTemperatureLast24Hours\",\n  precipitationLastHour = \"precipitationLastHour\",\n  precipitationLast3Hours = \"precipitationLast3Hours\",\n  precipitationLast6Hours = \"precipitationLast6Hours\",\n  relativeHumidity = \"relativeHumidity\",\n  windChill = \"windChill\",\n  heatIndex = \"heatIndex\",\n}\n\nexport type IWeatherStatSpec = {\n  id: WEATHER_STAT_KEYS;\n  unit: WEATHER_UNIT_KEYS;\n  description: string;\n  name: string;\n  abbrev: string;\n  icon: string;\n  isDefault: boolean;\n  color: string;\n};\n\nexport const WEATHER_STAT_SPEC: IWeatherStatSpec[] = [\n  {\n    id: WEATHER_STAT_KEYS.temperature,\n    unit: WEATHER_UNIT_KEYS.degC,\n    description: \"Air temperature.\",\n    name: \"Temperature\",\n    abbrev: \"Temp\",\n    icon: \"fas fa-temperature-high\",\n    isDefault: true,\n    color: \"#008FFB\",\n  },\n  {\n    id: WEATHER_STAT_KEYS.dewpoint,\n    unit: WEATHER_UNIT_KEYS.degC,\n    description:\n      \"A measure of atmospheric moisture. It is the temperature to which air must be cooled in order to reach saturation (assuming air pressure and moisture content are constant). A higher dew point indicates more moisture present in the air. It is sometimes referred to as Dew Point Temperature, and sometimes written as one word (Dewpoint).\",\n    name: \"Dew point\",\n    abbrev: \"Dew\",\n    icon: \"fas fa-mountain\",\n    isDefault: true,\n    color: \"#00E396\",\n  },\n  {\n    id: WEATHER_STAT_KEYS.windDirection,\n    unit: WEATHER_UNIT_KEYS.degree_angle,\n    description:\n      \"The true direction \\u003Cb\\u003Efrom which\\u003C/b\\u003E the wind is blowing at a given location (i.e., wind blowing from the north to the south is a north wind). It is normally measured in tens of degrees from 10 degrees clockwise through 360 degrees. North is 360 degrees. A wind direction of 0 degrees is only used when wind is calm.\",\n    name: \"Wind direction\",\n    abbrev: \"Wind dir.\",\n    icon: \"fas fa-compass\",\n    isDefault: false,\n    color: \"#FEB019\",\n  },\n  {\n    id: WEATHER_STAT_KEYS.windSpeed,\n    unit: WEATHER_UNIT_KEYS.km_h_1,\n    description:\n      \"The rate at which air is moving horizontally past a given point. It may be a 2-minute average speed (reported as wind speed) or an instantaneous speed (reported as a peak wind speed, wind gust, or squall).\",\n    name: \"Wind speed\",\n    abbrev: \"Wind\",\n    icon: \"fas fa-wind\",\n    isDefault: true,\n    color: \"#FF4560\",\n  },\n  {\n    id: WEATHER_STAT_KEYS.windGust,\n    unit: WEATHER_UNIT_KEYS.km_h_1,\n    description:\n      \"Rapid fluctuations in the wind speed with a variation of 10 knots or more between peaks and lulls. The speed of the gust will be the maximum instantaneous wind speed.\",\n    name: \"Wind gust\",\n    abbrev: \"Wind gust\",\n    icon: \"fas fa-wind\",\n    isDefault: false,\n    color: \"#775DD0\",\n  },\n  {\n    id: WEATHER_STAT_KEYS.barometricPressure,\n    unit: WEATHER_UNIT_KEYS.Pa,\n    description: \"The pressure of the atmosphere as indicated by a barometer.\",\n    name: \"Barometric pressure\",\n    abbrev: \"Pressure\",\n    icon: \"fas fa-weight-hanging\",\n    isDefault: true,\n    color: \"#3f51b5\",\n  },\n  {\n    id: WEATHER_STAT_KEYS.seaLevelPressure,\n    unit: WEATHER_UNIT_KEYS.Pa,\n    description:\n      \"The sea level pressure is the atmospheric pressure at sea level at a given location. When observed at a reporting station that is not at sea level (nearly all stations), it is a correction of the \\u003Cb\\u003Estation pressure\\u003C/b\\u003E to sea level. This correction takes into account the standard variation of pressure with height and the influence of temperature variations with height on the pressure. The temperature used in the sea level correction is a twelve hour mean, eliminating diurnal effects. Once calculated, horizontal variations of sea level pressure may be compared for location of high and low pressure areas and fronts.\",\n    name: \"Sea level pressure\",\n    abbrev: \"Pressure (Sea)\",\n    icon: \"fas fa-weight-hanging\",\n    isDefault: false,\n    color: \"#03a9f4\",\n  },\n  {\n    id: WEATHER_STAT_KEYS.visibility,\n    unit: WEATHER_UNIT_KEYS.m,\n    description:\n      \"The distance at which a given standard object can be seen and identified with the unaided eye\",\n    name: \"Visibility\",\n    abbrev: \"Viz\",\n    icon: \"fas fa-eye\",\n    isDefault: true,\n    color: \"#4caf50\",\n  },\n  {\n    id: WEATHER_STAT_KEYS.maxTemperatureLast24Hours,\n    unit: WEATHER_UNIT_KEYS.degC,\n    description:\n      \"Maximum temperature in last 24 hours. The temperature is a measure of the internal energy that a substance contains. This is the most measured quantity in the atmosphere.\",\n    name: \"Max temperature (24h)\",\n    abbrev: \"Max Temp.\",\n    icon: \"fas fa-temperature-high\",\n    isDefault: false,\n    color: \"#f9ce1d\",\n  },\n  {\n    id: WEATHER_STAT_KEYS.minTemperatureLast24Hours,\n    unit: WEATHER_UNIT_KEYS.degC,\n    description:\n      \"Minimum temperature in last 24 hours. The temperature is a measure of the internal energy that a substance contains. This is the most measured quantity in the atmosphere.\",\n    name: \"Min temperature (24h)\",\n    abbrev: \"Min Temp.\",\n    icon: \"fas fa-temperature-low\",\n    isDefault: false,\n    color: \"#FF9800\",\n  },\n  {\n    id: WEATHER_STAT_KEYS.precipitationLastHour,\n    unit: WEATHER_UNIT_KEYS.m,\n    description:\n      \"Total precipitation in the last hour. Total precipitation in the last six hours. The process where water vapor condenses in the atmosphere to form water droplets that fall to the Earth as rain, sleet, snow, hail, etc.\",\n    name: \"Precipitation in last hour\",\n    abbrev: \"Rain\",\n    icon: \"fas fa-cloud-rain\",\n    isDefault: true,\n    color: \"#33b2df\",\n  },\n  {\n    id: WEATHER_STAT_KEYS.precipitationLast3Hours,\n    unit: WEATHER_UNIT_KEYS.m,\n    description:\n      \"Total precipitation in the last three hours. The process where water vapor condenses in the atmosphere to form water droplets that fall to the Earth as rain, sleet, snow, hail, etc.\",\n    name: \"Precipitation in last three hours\",\n    abbrev: \"Rain (3h)\",\n    icon: \"fas fa-cloud-rain\",\n    isDefault: false,\n    color: \"#546E7A\",\n  },\n  {\n    id: WEATHER_STAT_KEYS.precipitationLast6Hours,\n    unit: WEATHER_UNIT_KEYS.m,\n    description:\n      \"Total precipitation in the last six hours. The process where water vapor condenses in the atmosphere to form water droplets that fall to the Earth as rain, sleet, snow, hail, etc.\",\n    name: \"Precipitation in last six hours\",\n    abbrev: \"Rain (6h)\",\n    icon: \"fas fa-cloud-rain\",\n    isDefault: false,\n    color: \"#d4526e\",\n  },\n  {\n    id: WEATHER_STAT_KEYS.relativeHumidity,\n    unit: WEATHER_UNIT_KEYS.percent,\n    description:\n      \"A dimensionless ratio, expressed in percent, of the amount of atmospheric moisture present relative to the amount that would be present if the air were saturated. Since the latter amount is dependent on temperature, relative humidity is a function of both moisture content and temperature. As such, relative humidity by itself does not directly indicate the actual amount of atmospheric moisture present. See dew point.\",\n    name: \"Relative humidity\",\n    abbrev: \"Humidity\",\n    icon: \"fas fa-grin-beam-sweat\",\n    isDefault: true,\n    color: \"#13d8aa\",\n  },\n  {\n    id: WEATHER_STAT_KEYS.windChill,\n    unit: WEATHER_UNIT_KEYS.degC,\n    description:\n      \"Reference to the \\u003Cb\\u003EWind Chill Factor\\u003C/b\\u003E; increased wind speeds accelerate heat loss from exposed skin, and the wind chill is a measure of this effect. No specific rules exist for determining when wind chill becomes dangerous. As a general rule, the threshold for potentially dangerous wind chill conditions is about -20\\u00c2\\u00b0F.\",\n    name: \"Wind chill\",\n    abbrev: \"Wind chill\",\n    icon: \"fas fa-icicles\",\n    isDefault: true,\n    color: \"#A5978B\",\n  },\n  {\n    id: WEATHER_STAT_KEYS.heatIndex,\n    unit: WEATHER_UNIT_KEYS.degC,\n    description:\n      \"The Heat Index (HI) or the \\u0022Apparent Temperature\\u0022 is an accurate measure of how hot it really feels when the Relative Humidity (RH) is added to the actual air temperature.\",\n    name: \"Heat index\",\n    abbrev: \"Heat index\",\n    icon: \"fas fa-fire\",\n    isDefault: true,\n    color: \"#4ecdc4\",\n  },\n];\n","import React, { useMemo } from \"react\";\nimport { StationObservation } from \"types/weather.types\";\nimport \"./index.scss\";\nimport {\n  WEATHER_STAT_SPEC,\n  WEATHER_UNITS,\n  IWeatherStatSpec,\n} from \"common/weather\";\nimport { QueryStatus } from \"react-query\";\n\nconst CityBlockCurrentStat: React.FC<{\n  spec: IWeatherStatSpec;\n  stat: number;\n}> = ({ spec, stat, ...props }) => {\n  const units = WEATHER_UNITS[spec.unit];\n\n  return (\n    <div className=\"columns current-stat ml-0 mr-0\" {...props}>\n      <div className=\"column is-narrow\">\n        <span className=\"icon\">\n          <i className={spec.icon}></i>\n        </span>\n      </div>\n      <div className=\"column is-narrow has-text-weight-semibold\">\n        {\" \"}\n        <abbr title={spec.description}>{spec.name}</abbr>\n      </div>\n      <div className=\"column pr-0\">\n        <div className=\"is-pulled-right\">{stat}</div>\n      </div>\n      <div className=\"column is-narrow pl-0 is-italic\">\n        {\" \"}\n        <abbr title={units.name}>{units.abbrev}</abbr>\n      </div>\n    </div>\n  );\n};\n\nconst CityBlockCurrentTitle: React.FC = () => (\n  <div className=\"columns ml-0 mr-0\">\n    <div className=\"column has-text-weight-bold\">Current weather</div>\n  </div>\n);\n\ntype ITitlePlaceholder = {\n  [s in QueryStatus]: {\n    title: string;\n    message: string;\n    icon: string;\n    background: string;\n    foreground: string;\n    canRefetch: boolean;\n  };\n};\n\nconst STATUS_TITLES = {\n  [QueryStatus.Error]: {\n    title: \"Error\",\n    message: \"Could not load data.\",\n    icon: \"fas fa-exclamation-circle\",\n    background: \"has-background-danger-light\",\n    foreground: \"has-text-danger\",\n    canRefetch: true,\n  },\n  [QueryStatus.Loading]: {\n    title: \"Data loading...\",\n    message: \"This should only take a moment.\",\n    icon: \"fas fa-hourglass-half\",\n    background: \"has-background-white-ter\",\n    foreground: \"\",\n    canRefetch: false,\n  },\n  [QueryStatus.Success]: {\n    title: \"Data fetch complete!\",\n    message: \"Rendering now...\",\n    icon: \"fas fa-hourglass-half\",\n    background: \"has-background-success-light\",\n    foreground: \"has-text-success-dark\",\n    canRefetch: true,\n  },\n} as ITitlePlaceholder;\n\nconst DataPlaceholder: React.FC<{\n  status: QueryStatus;\n  onRefetch: () => void | Promise<void>;\n}> = ({ status, onRefetch }) => {\n  const {\n    title,\n    message,\n    icon,\n    background,\n    foreground,\n    canRefetch,\n  } = useMemo(() => STATUS_TITLES[status], [status]);\n\n  return (\n    <div className={`content m-3 p-5 has-text-centered ${background}`}>\n      <h3 className={`title is-4 ${foreground}`}>\n        <span className=\"icon pr-5\">\n          <i className={icon} />\n        </span>\n        <span>{title}</span>\n      </h3>\n      <p className=\"is-italic\">{message}</p>\n      <br />\n      {canRefetch && (\n        <button className=\"button is-medium\" onClick={onRefetch}>\n          Refetch the data\n        </button>\n      )}\n    </div>\n  );\n};\n\nconst DataRows: React.FC<{ data: StationObservation }> = ({ data }) => (\n  <>\n    {WEATHER_STAT_SPEC.map((spec) =>\n      data.properties[spec.id].value ? (\n        <CityBlockCurrentStat\n          key={spec.id}\n          spec={spec}\n          stat={data.properties[spec.id].value || -1}\n        ></CityBlockCurrentStat>\n      ) : null\n    )}\n  </>\n);\n\nexport interface CityBlockCurrentProps {\n  data?: StationObservation;\n\n  status: QueryStatus;\n\n  onRefetch: () => void | Promise<void>;\n}\n\n/**\n * Primary UI component for user interaction\n */\nexport const CityBlockCurrent: React.FC<CityBlockCurrentProps> = ({\n  data,\n  status,\n  onRefetch,\n  ...props\n}) => {\n  return (\n    <div className=\"city-block-current box pl-0 pr-0\" {...props}>\n      <CityBlockCurrentTitle />\n      {data ? (\n        <DataRows data={data} />\n      ) : (\n        <DataPlaceholder onRefetch={onRefetch} status={status} />\n      )}\n    </div>\n  );\n};\n","import { CONTACT_EMAIL, URL } from \"common/constants\";\nimport {\n  WeatherApiStationObservationLatest,\n  WeatherApiStationObservations,\n} from \"types/weather.types\";\nimport { QueryStatus, useQuery } from \"react-query\";\n\nconst BASE_URL = \"https://api.weather.gov\";\nconst CACHE_TIME = 1000 * 60 * 5; // 5 minutes (API update rate)\n\nvar HEADERS = new Headers();\nHEADERS.append(\"Accept\", \"application/geo+json\");\nHEADERS.append(\"User-Agent\", `(${URL},${CONTACT_EMAIL})`);\nHEADERS.append(\"Origin\", URL);\n\nconst REQUEST_INIT = {\n  method: \"GET\",\n  headers: HEADERS,\n} as RequestInit;\n\n/**\n * Common weather API request\n *\n * NOTE Cannot request https resources from localhost in firefox. See https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS/Errors/CORSDidNotSucceed?utm_source=devtools&utm_medium=firefox-cors-errors&utm_campaign=default\n *\n * @param url\n */\nconst _callWeatherStation = async <T>(url: string): Promise<T> => {\n  const res = await fetch(url, REQUEST_INIT);\n\n  if (!res.ok) {\n    const r = await res.json();\n    throw new Error(r.detail || \"Station not found\");\n  }\n\n  return await res.json();\n};\n\ntype ITitlePlaceholder = {\n  [s in QueryStatus]: {\n    title: string;\n    message: string;\n    icon: string;\n    background: string;\n    foreground: string;\n    canRefetch: boolean;\n  };\n};\n\nexport const STATUS_TITLES = {\n  [QueryStatus.Error]: {\n    title: \"Error\",\n    message: \"Could not load data.\",\n    icon: \"fas fa-exclamation-circle\",\n    background: \"has-background-danger-light\",\n    foreground: \"has-text-danger\",\n    canRefetch: true,\n  },\n  [QueryStatus.Loading]: {\n    title: \"Data loading...\",\n    message: \"This should only take a moment.\",\n    icon: \"fas fa-hourglass-half\",\n    background: \"has-background-white-ter\",\n    foreground: \"\",\n    canRefetch: false,\n  },\n  [QueryStatus.Success]: {\n    title: \"Data fetch complete!\",\n    message: \"Rendering now...\",\n    icon: \"fas fa-hourglass-half\",\n    background: \"has-background-success-light\",\n    foreground: \"has-text-success-dark\",\n    canRefetch: true,\n  },\n} as ITitlePlaceholder;\n\nconst weatherLatest = async (\n  _: string,\n  stationId: string\n): Promise<WeatherApiStationObservationLatest> => {\n  const url = `${BASE_URL}/stations/${stationId}/observations/latest`;\n\n  return _callWeatherStation<WeatherApiStationObservationLatest>(url);\n};\n\nconst weatherHistorical = async (\n  _: string,\n  stationId: string,\n  limit = 50\n): Promise<WeatherApiStationObservations> => {\n  const url = `${BASE_URL}/stations/${stationId}/observations?limit=${limit}`;\n\n  const data = await _callWeatherStation<WeatherApiStationObservations>(url);\n\n  // Will return \"ok\" even if stationId is bad\n  if (data.features.length === 0) {\n    throw new Error(\"Station not found\");\n  }\n\n  return data;\n};\n\nexport function useWeatherLatest(stationId: string) {\n  const out = useQuery([\"weather-latest\", stationId], weatherLatest, {\n    cacheTime: CACHE_TIME,\n    staleTime: CACHE_TIME,\n  });\n\n  return {\n    ...out,\n    statusTitle: STATUS_TITLES[out.status],\n  };\n}\n\nexport function useWeatherHistorical(stationId: string, limit = 50) {\n  const out = useQuery(\n    [\"weather-historical\", stationId, limit],\n    weatherHistorical,\n    {\n      cacheTime: CACHE_TIME,\n      staleTime: CACHE_TIME,\n    }\n  );\n\n  return {\n    ...out,\n    statusTitle: STATUS_TITLES[out.status],\n  };\n}\n","import { IStationName } from \"common/data/stations\";\nimport { CityBlockCurrent as CityBlockCurrentComponent } from \"components/CityBlockCurrent\";\nimport React from \"react\";\nimport { useWeatherLatest } from \"services/weather/index\";\n\nexport interface CityBlockCurrentProps {\n  /**\n   * Info about the station that was selected\n   */\n  station: IStationName;\n\n  /**\n   * Index number/order of station in block\n   */\n  idx: number;\n}\n\nconst CityBlockCurrent: React.FC<CityBlockCurrentProps> = ({\n  station,\n  idx,\n  ...props\n}) => {\n  const { data, status, updatedAt, refetch } = useWeatherLatest(station.id);\n\n  // TODO Add data freshness info\n  console.log(\"Data last updated at:\", new Date(updatedAt));\n\n  const handleRefetch = async () => {\n    refetch();\n  };\n\n  return (\n    <CityBlockCurrentComponent\n      data={data}\n      status={status}\n      onRefetch={handleRefetch}\n      {...props}\n    />\n  );\n};\n\nexport default CityBlockCurrent;\n","import { useReducer } from \"react\";\n\nenum ARRAY_REDUCER_ACTIONS {\n  ADD,\n  REMOVE,\n  MOVE,\n}\n\ntype IArrayReducerState<T> = T[];\ntype IArrayReducerAction<T> = {\n  type: ARRAY_REDUCER_ACTIONS;\n  index: {\n    from?: number;\n    to?: number;\n  };\n  element?: T;\n};\n\nconst addAtIndex = <T>(element: T, idx: number, arr: T[]): T[] => [\n  ...arr.slice(0, idx),\n  element,\n  ...arr.slice(idx),\n];\n\nconst removeAtIndex = <T>(idx: number, arr: T[]): T[] =>\n  arr.filter((_, i) => i !== idx);\n\nfunction reducer<T>(\n  state: IArrayReducerState<T>,\n  action: IArrayReducerAction<T>\n): IArrayReducerState<T> {\n  let idx: number;\n  switch (action.type) {\n    case ARRAY_REDUCER_ACTIONS.ADD:\n      if (!!!action.element)\n        throw new Error(\"Must include an element to be added\");\n      idx = action.index.to ?? 0;\n      return addAtIndex(action.element, idx, state);\n    case ARRAY_REDUCER_ACTIONS.REMOVE:\n      idx = action.index.from ?? -1;\n      return removeAtIndex(idx, state);\n    case ARRAY_REDUCER_ACTIONS.MOVE:\n      const fromIdx = action.index.from ?? -1;\n      const toIdx = action.index.to ?? 0;\n      const element = state[fromIdx];\n      if (!!!element)\n        throw new Error(\n          `Invalid \"from\" index. (from: ${fromIdx}, to: ${toIdx})`\n        );\n      return addAtIndex(element, toIdx, removeAtIndex(fromIdx, state));\n    default:\n      throw new Error(`Invalid action type \"${action.type}\" passed.`);\n  }\n}\n\n/**\n * General hook for maintaining an array of same-type elements.\n *\n * For \"integration test\" see stories on `ListedArray` component.\n *\n * @param initialState\n */\nexport default function useArrayReducer<T>(\n  initialState: IArrayReducerState<T>\n) {\n  const [state, dispatch] = useReducer<\n    (\n      state: IArrayReducerState<T>,\n      action: IArrayReducerAction<T>\n    ) => IArrayReducerState<T>\n  >(reducer, initialState);\n\n  /**\n   * Add new element at index.\n   * @param element\n   * @param to (optional) Adds to top if not specified\n   */\n  const onAdd = (element: T, to?: number) =>\n    dispatch({\n      type: ARRAY_REDUCER_ACTIONS.ADD,\n      index: { to, from: -1 },\n      element,\n    });\n\n  /**\n   * Remove element at index `from`\n   * @param from\n   */\n  const onRemove = (from: number) =>\n    dispatch({\n      type: ARRAY_REDUCER_ACTIONS.REMOVE,\n      index: { to: -1, from },\n    });\n\n  /**\n   * Moves an element \"from\" an index \"to\" a new index.\n   *\n   * Think of this as a shortcut for calling `onRemove` _then_ `onAdd`.\n   *\n   * The \"from\" index should reflect the index of the item in the pre-mutation state.\n   * The \"to\" index should reflect the index insertion point on the result of the item removal. Note that the correct element here may depend on the previous position of the element...\n   *\n   * ENHANCEMENT Add logic for handling \"to\" updates.\n   *\n   * @param from\n   * @param to\n   */\n  const onMove = (from: number, to: number) =>\n    dispatch({ type: ARRAY_REDUCER_ACTIONS.MOVE, index: { from, to } });\n\n  /**\n   * Move the element up one index\n   * Shortcut for `onMove(idx, idx-1)`\n   * @param idx\n   */\n  const onMoveUp = (idx: number) => onMove(idx, idx - 1);\n\n  /**\n   * Move the element down one index\n   * Shortcut for `onMove(idx, idx+1)`\n   * @param idx\n   */\n  const onMoveDown = (idx: number) => onMove(idx, idx + 1);\n\n  return { state, onAdd, onRemove, onMove, onMoveUp, onMoveDown };\n}\n","import { IWeatherStatSpec } from \"common/weather\";\nimport React from \"react\";\nimport \"./index.scss\";\n\nconst SeriesSelection: React.FC<{\n  specs: IWeatherStatSpec[];\n  active: IWeatherStatSpec;\n  onSelect: (spec: IWeatherStatSpec) => void;\n}> = ({ specs, active, onSelect }) => {\n  const _onSelect = (e: React.ChangeEvent<HTMLSelectElement>): void =>\n    onSelect(specs.find((spec) => spec.id === e.target.value) || specs[0]);\n\n  return (\n    <div className=\"control has-icons-left is-expanded\">\n      <div className=\"select is-expanded is-medium\">\n        <select\n          className=\"is-expanded\"\n          aria-label=\"select-series\"\n          title=\"Select a series to chart\"\n          onChange={_onSelect}\n          value={active.id}\n        >\n          {specs.map((spec) => (\n            <option key={spec.id} value={spec.id}>\n              {spec.name}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div className=\"icon is-medium is-left\">\n        <i className=\"fas fa-chart-line\"></i>\n      </div>\n    </div>\n  );\n};\n\nconst HeaderButton: React.FC<{\n  icon: string;\n  title: string;\n  isActive: boolean;\n  disabled?: boolean;\n  className?: string;\n  onClick: () => void;\n}> = ({ icon, title, isActive, disabled = false, className = \"\", onClick }) => (\n  <button\n    className={`button is-medium ${className} ${isActive ? \"\" : \"is-outlined\"}`}\n    title={title}\n    onClick={onClick}\n    disabled={disabled}\n  >\n    <span className=\"icon has-text-color-link\">\n      <i className={icon}></i>\n    </span>\n  </button>\n);\n\nconst InfoButton: React.FC<{ isActive: boolean; onClick: () => void }> = ({\n  isActive,\n  onClick,\n}) => (\n  <HeaderButton\n    className=\"is-link\"\n    disabled={false}\n    isActive={isActive}\n    title=\"Display info for the selected series\"\n    icon=\"fas fa-info-circle\"\n    onClick={onClick}\n  />\n);\n\nconst FullScreenButton: React.FC<{\n  isActive: boolean;\n  onClick: () => void;\n}> = ({ isActive, onClick }) => (\n  <HeaderButton\n    disabled={true}\n    isActive={isActive}\n    title=\"Display the chart fullscreen\"\n    icon=\"fas fa-expand\"\n    onClick={onClick}\n  />\n);\n\nconst Header: React.FC<{\n  selectComponent: React.ReactNode;\n  infoButton: React.ReactNode;\n  fullScreenButton: React.ReactNode;\n}> = ({ selectComponent, infoButton, fullScreenButton }) => (\n  <div className=\"field is-horizontal is-expanded\">\n    <div className=\"field-body\">\n      <div className=\"field has-addons\">\n        {selectComponent}\n        <div className=\"control\">{infoButton}</div>\n        <div className=\"control\">{fullScreenButton}</div>\n      </div>\n    </div>\n  </div>\n);\n\nexport interface CityBlockChartProps {\n  showInfo: boolean;\n  showFullScreen: boolean;\n\n  onInfo: () => void;\n  onFullScreen: () => void;\n  onSeriesSelect: (spec: IWeatherStatSpec) => void;\n\n  specs: IWeatherStatSpec[];\n  activeSeries: IWeatherStatSpec;\n}\n\n/**\n * Outline for chart container\n */\nexport const CityBlockChart: React.FC<CityBlockChartProps> = ({\n  specs,\n  activeSeries,\n  showInfo,\n  showFullScreen,\n  onInfo,\n  onFullScreen,\n  onSeriesSelect,\n  ...props\n}) => {\n  return (\n    <div className=\"city-block-chart card is-shadowless is-bordered\" {...props}>\n      <header className=\"card-header pl-5 pr-5 pt-3 pb-3 is-shadowless\">\n        <Header\n          selectComponent={\n            <SeriesSelection\n              active={activeSeries}\n              specs={specs}\n              onSelect={onSeriesSelect}\n            />\n          }\n          infoButton={<InfoButton onClick={onInfo} isActive={showInfo} />}\n          fullScreenButton={\n            <FullScreenButton\n              onClick={onFullScreen}\n              isActive={showFullScreen}\n            />\n          }\n        ></Header>\n      </header>\n      <div className=\"card-content pb-2 pt-2\">{props.children}</div>\n    </div>\n  );\n};\n","import { IWeatherUnit } from \"common/weather\";\nimport React, { useMemo } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport Measure from \"react-measure\";\nimport { IApexChartSeries, IApexChartTypes } from \"types/apex.types\";\nimport \"./index.scss\";\n\nconst BRUSH_CHART_HEIGHT = 100;\nconst CHART_HEIGHT_PAD = 15;\n\ntype ChartOptionProps = {\n  name: string;\n  unit: IWeatherUnit;\n  chartType: IApexChartTypes;\n  color: string;\n};\n\nconst generateTimeSeriesOptions = ({\n  name,\n  unit,\n  chartType,\n  color,\n}: ChartOptionProps): Record<string, any> => ({\n  chart: {\n    id: \"main-chart\",\n    type: chartType,\n    title: name,\n    stacked: false,\n    zoom: {\n      type: \"x\",\n      enabled: true,\n      autoScaleYaxis: true,\n    },\n    toolbar: {\n      // TODO Add back ability to export chart?\n      show: false,\n      autoSelected: \"pan\",\n      tools: {\n        zoom: false,\n        zoomin: false,\n        zoomout: false,\n        reset: false,\n      },\n    },\n    events: {\n      // TODO Callbacks on chart click.\n      // markerClick: function (event, chartContext, config) {\n      //   console.log(event);\n      //   console.log(chartContext);\n      //   console.log(config);\n      // },\n    },\n  },\n  colors: [color, \"#66DA26\", \"#2E93fA\", \"#546E7A\", \"#E91E63\", \"#FF9800\"],\n  dataLabels: {\n    enabled: false,\n  },\n  yaxis: {\n    labels: {\n      formatter: function (val: number) {\n        return val.toFixed(0);\n      },\n      style: {\n        colors: color,\n      },\n    },\n    title: {\n      text: unit.name,\n      style: { color },\n    },\n    axisBorder: {\n      show: true,\n      color,\n    },\n  },\n  xaxis: {\n    type: \"datetime\",\n    labels: {\n      datetimeFormatter: {\n        year: \"yyyy\",\n        month: \"MMM 'yy\",\n        day: \"dd MMM\",\n        hour: \"hh:mm TT\",\n      },\n    },\n    tooltip: {\n      enabled: false,\n    },\n  },\n  tooltip: {\n    shared: false,\n    x: {\n      show: true,\n      format: \"<b>hh:mm TT</b><br/> dd MMM yyyy\",\n    },\n    y: {\n      formatter: function (val: number) {\n        return `${val}${unit.abbrev}`;\n      },\n    },\n  },\n});\n\nconst generateBrushSeriesOptions = ({\n  color,\n  series,\n}: {\n  color: string;\n  series: IApexChartSeries;\n}): Record<string, any> => ({\n  chart: {\n    id: \"brush-chart\",\n    height: 130,\n    type: \"area\",\n    brush: {\n      target: \"main-chart\",\n      enabled: true,\n      autoScaleYaxis: true,\n    },\n    selection: {\n      enabled: true,\n      xaxis: {\n        min: series[0].data[0][0],\n        max: series[0].data.slice(-1)[0][0],\n      },\n    },\n  },\n  colors: [color, color],\n\n  xaxis: {\n    type: \"datetime\",\n    tooltip: {\n      enabled: false,\n    },\n  },\n  yaxis: {\n    tickAmount: 2,\n    labels: {\n      show: true,\n      formatter: (value: number) => value,\n      style: { colors: \"rgba(0,0,0,0)\" },\n    },\n    title: {\n      text: \"unit\",\n      style: { color: \"rgba(0,0,0,0)\" },\n    },\n    axisBorder: {\n      show: true,\n      // color: \"rgba(0,0,0,0)\"\n    },\n  },\n});\n\n/**\n * Sets the dimensions of the chart given the outlying div\n *\n * @param entry\n */\nconst generateChartDims = (\n  entry: DOMRect\n): { width: number; height: number } => {\n  const width = Math.max(300, entry.width || 300);\n  // NOTE Why is 15 a magic number here?? Appears to be perfect point at which\n  // does not shrink/grow?\n  const height =\n    Math.max(250, (entry.height || 165) - CHART_HEIGHT_PAD) -\n    BRUSH_CHART_HEIGHT;\n\n  return { width, height };\n};\n\nexport interface TimeSeriesChartProps {\n  series: IApexChartSeries;\n  name: string;\n  unit: IWeatherUnit;\n  color: string;\n  chartType?: IApexChartTypes;\n}\n\n/**\n * Time series for displaying historical data\n */\nexport const TimeSeriesChart: React.FC<TimeSeriesChartProps> = ({\n  series,\n  name,\n  unit,\n  color,\n  chartType = \"line\",\n  ...props\n}) => {\n  const options = useMemo(\n    () => generateTimeSeriesOptions({ name, unit, color, chartType }),\n    [name, unit, color, chartType]\n  );\n\n  const optionsLine = useMemo(\n    () => generateBrushSeriesOptions({ color, series }),\n    [color, series]\n  );\n\n  return (\n    <Measure>\n      {({ measureRef, contentRect: { entry } }) => {\n        const { height, width } = generateChartDims(entry);\n        return (\n          <div ref={measureRef} className=\"base-time-series\" {...props}>\n            <div id=\"main-chart-outer\">\n              <Chart\n                options={options}\n                series={series}\n                type={chartType}\n                width={width}\n                height={height}\n              />\n            </div>\n            <div id=\"brush-chart-outer\">\n              <Chart\n                options={optionsLine}\n                series={series}\n                type=\"area\"\n                height={BRUSH_CHART_HEIGHT - CHART_HEIGHT_PAD}\n                width={width}\n              />\n            </div>\n          </div>\n        );\n      }}\n    </Measure>\n  );\n};\n","import {\n  IWeatherStatSpec,\n  IWeatherUnit,\n  WEATHER_STAT_KEYS,\n} from \"common/weather\";\nimport { TimeSeriesChart } from \"components/TimeSeriesChart\";\nimport React, { useMemo } from \"react\";\nimport { IApexChartSeries } from \"types/apex.types\";\nimport { WeatherApiStationObservations } from \"types/weather.types\";\nimport { CityBlockPlaceholder } from \"components/CityBlockPlaceholder/index\";\n\nconst extractSeriesFromData = (\n  id: WEATHER_STAT_KEYS,\n  name: string,\n  datesInv: number[],\n  data?: WeatherApiStationObservations\n): IApexChartSeries => {\n  if (!data) return [];\n\n  return [\n    {\n      name,\n      type: \"line\",\n      data: data.features\n        .map(\n          (feat, i) =>\n            !!feat.properties[id].value && [\n              datesInv[i],\n              feat.properties[id].value,\n            ]\n        )\n        .reverse()\n        .filter((el): el is number[] => el !== false),\n    },\n  ];\n};\n\nconst extractDatesFromData = (\n  data?: WeatherApiStationObservations\n): number[] => {\n  console.log(\"setting dates from formula\");\n\n  if (!data) return [];\n\n  return data.features.map((feat) =>\n    new Date(feat.properties.timestamp).valueOf()\n  );\n};\n\nexport interface CityBlockTimeSeriesProps {\n  data: WeatherApiStationObservations;\n\n  spec: IWeatherStatSpec;\n\n  unit: IWeatherUnit;\n}\n\nconst CityBlockTimeSeries: React.FC<CityBlockTimeSeriesProps> = ({\n  data,\n  spec,\n  unit,\n  ...props\n}) => {\n  const { id, name, color } = spec;\n  const datesInv = useMemo(() => extractDatesFromData(data), [data]);\n  const series = useMemo(\n    () => extractSeriesFromData(id, name, datesInv, data),\n    [id, name, datesInv, data]\n  );\n\n  return (\n    <>\n      {series[0].data.length > 0 ? (\n        <TimeSeriesChart\n          name={name}\n          unit={unit}\n          color={color}\n          series={series}\n          {...props}\n        />\n      ) : (\n        <CityBlockPlaceholder\n          title={`No data found for series \"${spec.name}\"`}\n          description=\"Select another series to view data.\"\n          icon=\"fas fa-database\"\n          inline={false}\n        />\n      )}\n    </>\n  );\n};\n\nexport default CityBlockTimeSeries;\n","import { IStationName } from \"common/data/stations\";\nimport {\n  IWeatherStatSpec,\n  WEATHER_STAT_SPEC,\n  WEATHER_UNITS,\n} from \"common/weather\";\nimport { CityBlockChart as CityBlockChartComponent } from \"components/CityBlockChart\";\nimport { CityBlockPlaceholder } from \"components/CityBlockPlaceholder\";\nimport CityBlockTimeSeries from \"containers/CityBlockTimeSeries\";\nimport React, { useState } from \"react\";\nimport { useWeatherHistorical } from \"services/weather/index\";\n\nexport interface CityBlockChartProps {\n  /**\n   * Info about the station that was selected\n   */\n  station: IStationName;\n\n  /**\n   * Index number/order of station in block\n   */\n  idx: number;\n}\n\nconst CityBlockChart: React.FC<CityBlockChartProps> = ({\n  station,\n  idx,\n  ...props\n}) => {\n  const [showInfo, setShowInfo] = useState<boolean>(false);\n  const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\n  const [activeSeries, setActiveSeries] = useState<IWeatherStatSpec>(\n    WEATHER_STAT_SPEC[0]\n  );\n  const { data, statusTitle } = useWeatherHistorical(station.id, 50);\n  const unit = WEATHER_UNITS[activeSeries.unit];\n\n  // TODO Enable use of modal and info elements\n  const handleFullScreen = () => setIsFullScreen((v) => !v);\n  const handleShowInfo = () => setShowInfo((v) => !v);\n  const handleChangeActiveSeries = (spec: IWeatherStatSpec) => {\n    setActiveSeries(spec);\n  };\n\n  return (\n    <CityBlockChartComponent\n      specs={WEATHER_STAT_SPEC}\n      activeSeries={activeSeries}\n      showInfo={showInfo}\n      showFullScreen={isFullScreen}\n      onSeriesSelect={handleChangeActiveSeries}\n      onInfo={handleShowInfo}\n      onFullScreen={handleFullScreen}\n      {...props}\n    >\n      {showInfo && (\n        //  TODO Add info block to separate component\n        <>\n          <div className=\"content pt-0 pb-0 mt-0 mb-0 is-size-7\">\n            <p className=\"mt-1 mb-1\">\n              <span className=\"icon pr-2\">\n                <i className={activeSeries.icon}></i>\n              </span>\n              <span className=\"has-text-weight-bold pr-2\">\n                {activeSeries.name}.\n              </span>{\" \"}\n              <span className=\"is-italic\">{activeSeries.description}</span>\n            </p>\n          </div>\n        </>\n      )}\n\n      {data ? (\n        <CityBlockTimeSeries data={data} spec={activeSeries} unit={unit} />\n      ) : (\n        <CityBlockPlaceholder\n          title={statusTitle.title}\n          description={statusTitle.message}\n          icon={statusTitle.icon}\n        />\n      )}\n    </CityBlockChartComponent>\n  );\n};\n\nexport default CityBlockChart;\n","import { IStationName } from \"common/data/stations\";\nimport { CityBlock as CityBlockComponent } from \"components/CityBlock\";\nimport CityBlockCurrent from \"containers/CityBlockCurrent\";\nimport CityBlockChart from \"containers/CityBlockChart\";\nimport React, { useState } from \"react\";\n\nexport interface CityBlockProps {\n  /**\n   * Info about the station that was selected\n   */\n  station: IStationName;\n\n  /**\n   * Index number/order of station in block\n   */\n  idx: number;\n}\n\nexport const CityBlock: React.FC<CityBlockProps> = ({\n  station,\n  idx,\n  ...props\n}) => {\n  const [isOpen, setIsOpen] = useState(idx === 0);\n\n  return (\n    <CityBlockComponent\n      station={station}\n      isOpen={isOpen}\n      onToggleOpen={() => setIsOpen((s) => !s)}\n      currentComponent={<CityBlockCurrent station={station} idx={idx} />}\n      chartComponent={<CityBlockChart station={station} idx={idx} />}\n      // TODO Add Dropdown component\n      {...props}\n    />\n  );\n};\n\n/*\n\n  canFetchMore: boolean | undefined;\n    clear: () = void;\n    data: TResult | undefined;\n    error: TError | null;\n    failureCount: number;\n    fetchMore: (fetchMoreVariable?: unknown, options?: FetchMoreOptions) => Promise<TResult | undefined>;\n    isError: boolean;\n    isFetched: boolean;\n    isFetchedAfterMount: boolean;\n    isFetching: boolean;\n    isFetchingMore?: IsFetchingMoreValue;\n    isIdle: boolean;\n    isInitialData: boolean;\n    isLoading: boolean;\n    isPreviousData: boolean;\n    isStale: boolean;\n    isSuccess: boolean;\n    refetch: (options?: RefetchOptions) = Promise<\n    remove: () = void;\n    status: QueryStatus;\n    updatedAt: number;\n    */\n","import { StationsContext } from \"common/context\";\nimport { CityBlockPlaceholder } from \"components/CityBlockPlaceholder\";\nimport { CityBlock } from \"containers/CityBlock\";\nimport React, { useContext } from \"react\";\nimport { ModalsContext } from \"common/context\";\n\nexport const CityBlockIterator: React.FC = () => {\n  const { stations } = useContext(StationsContext);\n  const { toggle } = useContext(ModalsContext);\n\n  return (\n    <div className=\"pt-4\">\n      {stations.length > 0 ? (\n        <>\n          {stations.map((station, idx) => (\n            <CityBlock key={station.id} station={station} idx={idx}></CityBlock>\n          ))}\n          <CityBlockPlaceholder\n            title=\"Add or edit your cities\"\n            description=\"Click here to edit\"\n            icon=\"fas fa-edit\"\n            expand={false}\n            inline={true}\n            onToggle={() => toggle(\"cities\")}\n          ></CityBlockPlaceholder>\n        </>\n      ) : (\n        <CityBlockPlaceholder\n          title=\"No cities selected!\"\n          description=\"Click here to add cities\"\n          icon=\"fas fa-search-location\"\n          expand={true}\n          inline={false}\n          onToggle={() => toggle(\"cities\")}\n        ></CityBlockPlaceholder>\n      )}\n    </div>\n  );\n};\n","import { IModalNames, ModalsContext } from \"common/context\";\nimport React, { useState } from \"react\";\n\nexport const ModalsProvider: React.FC = ({ ...props }) => {\n  const [modals, setModals] = useState<IModalNames>({ cities: false });\n\n  const toggle = (k: keyof IModalNames) =>\n    setModals((m) => ({ ...m, [k]: !m[k] }));\n  const context = { modals, toggle };\n\n  return (\n    <ModalsContext.Provider value={context}>\n      {props.children}\n    </ModalsContext.Provider>\n  );\n};\n","import { LOCAL_STORAGE_KEYS, IStationName } from \"common\";\nimport { useEffect } from \"react\";\nimport useArrayReducer from \"./useArrayReducer\";\n\nconst KEY = LOCAL_STORAGE_KEYS.STATIONS;\n\nexport function useStations() {\n  const {\n    state: stations,\n    onAdd,\n    onRemove,\n    onMove,\n    onMoveDown,\n    onMoveUp,\n  } = useArrayReducer<IStationName>(\n    JSON.parse(localStorage.getItem(KEY) || JSON.stringify([]))\n  );\n\n  useEffect(() => {\n    localStorage.setItem(KEY, JSON.stringify(stations));\n  }, [stations]);\n\n  return { stations, onAdd, onMove, onRemove, onMoveDown, onMoveUp };\n}\n","import { StationsContext } from \"common/context\";\nimport { useStations } from \"hooks/useStations\";\nimport React from \"react\";\nimport { IStationName } from \"../common/data/stations\";\n\n/**\n * Handles the set of active stations globally.\n * @param param0\n */\nexport const StationsProvider: React.FC = ({ ...props }) => {\n  const { stations, onAdd, onRemove, onMoveDown, onMoveUp } = useStations();\n\n  return (\n    <StationsContext.Provider\n      value={{\n        stations,\n        onAdd: (s: IStationName) => onAdd(s),\n        onRemove,\n        onMoveUp,\n        onMoveDown,\n      }}\n    >\n      {props.children}\n    </StationsContext.Provider>\n  );\n};\n","import { ModalsProvider } from \"containers/ModalsProvider\";\nimport React from \"react\";\nimport { QueryCache, ReactQueryCacheProvider } from \"react-query\";\nimport { StationsProvider } from \"./StationsProvider\";\n\nconst queryCache = new QueryCache();\n\nexport const ContextProvider: React.FC = ({ ...props }) => (\n  <ReactQueryCacheProvider queryCache={queryCache}>\n    {\" \"}\n    <ModalsProvider>\n      <StationsProvider>{props.children}</StationsProvider>\n    </ModalsProvider>\n  </ReactQueryCacheProvider>\n);\n","import { IStationName } from \"common\";\nimport React from \"react\";\nimport \"./index.scss\";\n\ninterface CityAddRowProps {\n  /**\n   * Station to be handled\n   */\n  station: IStationName;\n\n  /**\n   * Toggle modal open/close\n   */\n  onAdd: (\n    s: IStationName,\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => void;\n}\n\nconst CityAddRow: React.FC<CityAddRowProps> = ({\n  station,\n  onAdd,\n  ...props\n}) => (\n  <div\n    className=\"city-add-row columns is-selectable mr-0 ml-0 pr-1 pl-1\"\n    {...props}\n    title=\"Click to add station\"\n    onClick={(e) => onAdd(station, e)}\n  >\n    <div className=\"column content\">\n      {\" \"}\n      <p className=\"has-text-weight-semibold\">{station.city}</p>\n      <p className=\"is-size-7 has-text-weight-light unveil\">{station.name}</p>\n      <p className=\"is-size-7 unveil\">{station.id}</p>\n    </div>\n    <div className=\"column is-narrow\">\n      <span className=\"icon is-pulled-right unveil\">\n        <i className=\"fas fa-plus\"></i>\n      </span>\n    </div>\n  </div>\n);\n\nexport interface CityAddProps {\n  /**\n   * Stations that can be added.\n   */\n  stations: IStationName[];\n\n  /**\n   * Toggle modal open/close\n   */\n  onAdd: (\n    s: IStationName,\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => void;\n}\n\n/**\n * Primary UI component for user interaction\n */\nexport const CityAdd: React.FC<CityAddProps> = ({ stations, onAdd }) => {\n  return (\n    <div className=\"city-add box\">\n      <div className=\"columns mr-1 ml-0 pr-1 pl-1\">\n        <div className=\"column\">\n          <h3 className=\"title is-4 mb-0\">Add cities</h3>\n          <p className=\"is-size-7 is-italic pb-1 pt-0 mb-0 mt-0\">\n            Click a row to add the city\n          </p>\n        </div>\n      </div>\n      <div className=\"pb-5\">\n        {stations.length > 0 ? (\n          stations.map((s) => (\n            <CityAddRow station={s} onAdd={onAdd} key={s.id}></CityAddRow>\n          ))\n        ) : (\n          <div className=\"columns mr-1 ml-0 pr-1 pl-1\">\n            <div className=\"column\">\n              <h4 className=\"subtitle is-5 mb-0\">No stations to add</h4>\n              <p className=\"is-size-7 is-italic pb-1 pt-0 mb-0 mt-0\">\n                You added all available stations to the dashboard!\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./index.scss\";\n\nexport interface BaseModalProps {\n  /**\n   * If true, modal is open.\n   */\n  isOpen: boolean;\n\n  /**\n   * Toggle modal open/close\n   */\n  onToggle: () => void;\n\n  /**\n   * If true, includes a close button.\n   */\n  closeButton?: boolean;\n\n  /**\n   * Actual modal content\n   */\n  children: React.ReactNode;\n}\n\n/**\n * TODO Add escape key handler\n */\nexport const BaseModal: React.FC<BaseModalProps> = ({\n  isOpen,\n  onToggle,\n  closeButton = false,\n  children,\n  ...props\n}) => {\n  return (\n    <div className={`modal ${isOpen ? \"is-active\" : \"\"}`} {...props}>\n      <div\n        className=\"modal-background\"\n        onClick={onToggle}\n        title=\"Click on the background to exit\"\n      ></div>\n      {children}\n      {closeButton && (\n        <button\n          className=\"modal-close is-large\"\n          aria-label=\"close\"\n          onClick={onToggle}\n        ></button>\n      )}\n    </div>\n  );\n};\n","import { BaseModal } from \"components/BaseModal\";\nimport React from \"react\";\nimport \"./index.scss\";\n\nexport interface CityConfigModalProps {\n  /**\n   * Toggle modal open/close\n   */\n  onToggle: () => void;\n\n  /**\n   * If true, modal is open.\n   */\n  isOpen: boolean;\n\n  /**\n   * Actual modal content\n   */\n  leftChild: React.ReactNode;\n\n  rightChild: React.ReactNode;\n}\n\n/**\n * Primary UI component for user interaction\n */\nexport const CityConfigModal: React.FC<CityConfigModalProps> = ({\n  isOpen,\n  onToggle,\n  leftChild,\n  rightChild,\n}) => {\n  return (\n    <BaseModal isOpen={isOpen} onToggle={onToggle}>\n      <div className=\"modal-card\">\n        {/* Why is storybook version of padding different? */}\n        <header className=\"modal-card-head\">\n          <p className=\"modal-card-title has-text-weight-bold\">\n            <span className=\"icon\">\n              <i className=\"fas fa-city\"></i>\n            </span>\n            <span className=\"pl-1\">Add and edit your cities</span>\n          </p>\n          <button\n            onClick={onToggle}\n            className=\"delete\"\n            aria-label=\"close\"\n            title=\"Return to weather\"\n          ></button>\n        </header>\n        <section className=\"modal-card-body pb-0\">\n          <div className=\"body-columns columns pr-0 pl-0\">\n            <div className=\"column is-one-third\">{leftChild}</div>\n            <div className=\"column\">{rightChild}</div>\n          </div>\n        </section>\n      </div>\n    </BaseModal>\n  );\n};\n","import { IStationName } from \"common\";\nimport React from \"react\";\nimport \"./index.scss\";\n\ninterface CityOrderRowProps {\n  /**\n   * Station to be handled\n   */\n  station: IStationName;\n\n  /**\n   * Index/order of station\n   */\n  idx: number;\n\n  /**\n   * If true, this is the last station in the bunch. Implies cannot move down.\n   */\n  isLast: boolean;\n\n  /**\n   * Remove station from dashboard\n   */\n  onRemove: (idx: number) => void;\n\n  /**\n   * Move station up in dashboard\n   */\n  onMoveUp: (idx: number) => void;\n\n  /**\n   * Move station down in dashboard\n   */\n  onMoveDown: (idx: number) => void;\n}\n\nconst CityOrderRow: React.FC<CityOrderRowProps> = ({\n  station,\n  idx,\n  isLast,\n  onRemove,\n  onMoveUp,\n  onMoveDown,\n  ...props\n}) => (\n  <div\n    className=\"city-order-row columns is-selectable mr-0 ml-0 pr-1 pl-1\"\n    {...props}\n  >\n    <div className=\"column is-half content\">\n      {\" \"}\n      <p className=\"has-text-weight-semibold\">{station.city}</p>\n      <p className=\"is-size-7 has-text-weight-light\">{station.name}</p>\n      <p className=\"is-size-7\">{station.id}</p>\n    </div>\n    <div className=\"column\">\n      <span className=\"is-pulled-right\"> </span>\n    </div>\n    {/* TODO Add handling for small screen size */}\n    <div className=\"column is-narrow\">\n      <div className=\"field has-addons\">\n        <p className=\"control\">\n          <button\n            className=\"button\"\n            title=\"Move station down\"\n            disabled={isLast}\n            onClick={() => onMoveDown(idx)}\n          >\n            <span className=\"icon\">\n              <i className=\"fas fa-chevron-down\"></i>\n            </span>\n          </button>\n        </p>\n        <p className=\"control\">\n          <button\n            className=\"button\"\n            title=\"Move station up\"\n            disabled={idx === 0}\n            onClick={() => onMoveUp(idx)}\n          >\n            <span className=\"icon\">\n              <i className=\"fas fa-chevron-up\"></i>\n            </span>\n          </button>\n        </p>\n      </div>\n    </div>\n    <div className=\"column is-narrow\">\n      <div className=\"field has-addons\">\n        <p className=\"control\">\n          <button\n            className=\"button is-danger is-outlined\"\n            title=\"Remove station\"\n            onClick={() => onRemove(idx)}\n          >\n            <span className=\"icon\">\n              <i className=\"fas fa-trash\"></i>\n            </span>\n          </button>\n        </p>\n      </div>\n    </div>\n  </div>\n);\n\nexport interface CityOrderProps {\n  /**\n   * Stations that can be added.\n   */\n  stations: IStationName[];\n\n  /**\n   * Remove station from dashboard\n   */\n  onRemove: (idx: number) => void;\n\n  /**\n   * Move station up in dashboard\n   */\n  onMoveUp: (idx: number) => void;\n\n  /**\n   * Move station down in dashboard\n   */\n  onMoveDown: (idx: number) => void;\n}\n\n/**\n * Primary UI component for user interaction\n */\nexport const CityOrder: React.FC<CityOrderProps> = ({\n  stations,\n  onRemove,\n  onMoveUp,\n  onMoveDown,\n}) => {\n  return (\n    <div className=\"city-order box\">\n      <div className=\"columns mr-1 ml-0 pr-1 pl-1\">\n        <div className=\"column\">\n          <h3 className=\"title is-4 mb-0\">Your stations</h3>\n        </div>\n        {/* TODO Add removeAll action */}\n        <div className=\"column\"></div>\n      </div>\n      <div className=\"pb-5\">\n        {stations.length > 0 ? (\n          stations.map((s, i) => (\n            <CityOrderRow\n              station={s}\n              idx={i}\n              isLast={i === stations.length - 1}\n              onRemove={onRemove}\n              onMoveUp={onMoveUp}\n              onMoveDown={onMoveDown}\n              key={s.id}\n            />\n          ))\n        ) : (\n          <div className=\"columns mr-1 ml-0 pr-1 pl-1\">\n            <div className=\"column\">\n              <h4 className=\"subtitle is-5 mb-0\">No stations to add</h4>\n              <p className=\"is-size-7 is-italic pb-1 pt-0 mb-0 mt-0\">\n                You added all available stations to the dashboard!\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { ModalsContext, StationsContext } from \"common/context\";\nimport { CityAdd } from \"components/CityAdd\";\nimport { CityConfigModal as CityConfigModalComponent } from \"components/CityConfigModal\";\nimport { CityOrder } from \"components/CityOrder\";\nimport React, { useContext, useMemo } from \"react\";\nimport { STATIONS } from \"common/data/stations\";\n\nexport const CityConfigModal: React.FC = () => {\n  const {\n    toggle,\n    modals: { cities: isOpen },\n  } = useContext(ModalsContext);\n  const { stations, onAdd, onRemove, onMoveUp, onMoveDown } = useContext(\n    StationsContext\n  );\n\n  const unusedStations = useMemo(\n    () => STATIONS.filter((s) => stations.every((s_) => s_.id !== s.id)),\n    [stations]\n  );\n\n  return (\n    <CityConfigModalComponent\n      isOpen={isOpen}\n      onToggle={() => toggle(\"cities\")}\n      leftChild={<CityAdd stations={unusedStations} onAdd={onAdd} />}\n      rightChild={\n        <CityOrder\n          stations={stations}\n          onRemove={onRemove}\n          onMoveUp={onMoveUp}\n          onMoveDown={onMoveDown}\n        />\n      }\n    />\n  );\n};\n","import { CityConfigModal } from \"containers/CityConfigModal\";\nimport React from \"react\";\n\nexport const Modals: React.FC = () => (\n  <>\n    <CityConfigModal />\n  </>\n);\n","import React from \"react\";\nimport { APP_NAME } from \"common/constants\";\nimport \"./index.scss\";\n\nexport interface NavProps {\n  /**\n   * If true, menu will be open in case of mobile\n   */\n  isActive: boolean;\n\n  /**\n   * Toggles visibility of mobile menu\n   */\n  onToggleActive: () => void;\n\n  /**\n   * Toggles city selector modal\n   */\n  onToggleCities: () => void;\n}\n\n/**\n * Primary UI component for user interaction\n */\nexport const Nav: React.FC<NavProps> = ({\n  isActive = true,\n  onToggleCities,\n  onToggleActive,\n}) => {\n  return (\n    <nav\n      id=\"app-navbar\"\n      className=\"navbar\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"navbar-brand\">\n        <div className=\"navbar-item is-selectable\">\n          <span className=\"icon has-text-primary\">\n            <i className=\"fa fa-cloud\"></i>\n          </span>\n          <span className=\"ml-2 has-text-weight-bold\">{APP_NAME}</span>\n        </div>\n        <div\n          role=\"button\"\n          className={`navbar-burger burger ${isActive ? \"is-active\" : \"\"}`}\n          aria-label=\"menu\"\n          aria-expanded=\"false\"\n          data-target=\"navbarBasicExample\"\n          onClick={onToggleActive}\n        >\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n        </div>\n      </div>\n\n      <div\n        id=\"navbarBasicExample\"\n        className={`navbar-menu ${isActive ? \"is-active\" : \"\"}`}\n      >\n        {/* \n        <div className=\"navbar-start\">\n          <a className=\"navbar-item\">About</a> \n        </div>*/}\n\n        <div className=\"navbar-end\">\n          <div className=\"navbar-item\">\n            <div className=\"buttons\">\n              <button\n                className=\"button is-link is-outlined is-fullwidth\"\n                onClick={onToggleCities}\n              >\n                <span className=\"icon\">\n                  <i className=\"fa fa-city\"></i>\n                </span>\n                <span className=\"has-text-weight-semibold\">Cities</span>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { ModalsContext } from \"common/context\";\nimport { Nav as NavComponent } from \"components/Nav\";\nimport React, { useContext, useState } from \"react\";\n\nexport const Nav: React.FC = () => {\n  const [isActive, setIsActive] = useState(false);\n  const { toggle } = useContext(ModalsContext);\n\n  return (\n    <NavComponent\n      isActive={isActive}\n      onToggleActive={() => setIsActive((s) => !s)}\n      onToggleCities={() => toggle(\"cities\")}\n    ></NavComponent>\n  );\n};\n","import { Footer } from \"components/Footer\";\nimport { CityBlockIterator } from \"containers/CityBlockIterator\";\nimport { ContextProvider } from \"containers/ContextProviders\";\nimport { Modals } from \"containers/Modals\";\nimport { Nav } from \"containers/Nav\";\nimport React from \"react\";\n\nfunction App() {\n  return (\n    <>\n      <ContextProvider>\n        <div>\n          <Nav />\n\n          <main className=\"container\">\n            <CityBlockIterator></CityBlockIterator>\n          </main>\n          <Footer />\n        </div>\n        <Modals />\n      </ContextProvider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// import the library\nimport { library, dom } from \"@fortawesome/fontawesome-svg-core\";\n\n// import your icons\nimport {\n  faCloud,\n  faCity,\n  faChevronDown,\n  faChevronUp,\n  faChartLine,\n  faTemperatureHigh,\n  faMountain,\n  faCompass,\n  faWind,\n  faWeightHanging,\n  faEye,\n  faTemperatureLow,\n  faCloudRain,\n  faGrinBeamSweat,\n  faIcicles,\n  faFire,\n  faEnvelope,\n  faPlus,\n  faTrash,\n  faEdit,\n  faSearchLocation,\n  faExpand,\n  faInfoCircle,\n  faHourglassHalf,\n  faExclamationCircle,\n  faDatabase,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport {\n  faTwitter,\n  faFacebook,\n  faLinkedin,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nlibrary.add(\n  faCloud,\n  faCity,\n  faChevronDown,\n  faChevronUp,\n  faChartLine,\n  faTemperatureHigh,\n  faMountain,\n  faCompass,\n  faWind,\n  faWeightHanging,\n  faEye,\n  faTemperatureLow,\n  faCloudRain,\n  faGrinBeamSweat,\n  faIcicles,\n  faFire,\n  faEnvelope,\n  faTwitter,\n  faFacebook,\n  faLinkedin,\n  faPlus,\n  faTrash,\n  faEdit,\n  faSearchLocation,\n  faExpand,\n  faInfoCircle,\n  faHourglassHalf,\n  faExclamationCircle,\n  faDatabase\n);\n\n// Replaces <i /> elements with svg.\ndom.watch();\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"styles/index.scss\";\nimport \"./common/fontawesome\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}